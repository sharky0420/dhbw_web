name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/dhbw_web:latest
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
  deploy:
    needs: build-and-push
    name: deploy image
    runs-on: ubuntu-latest

    steps:
    
    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass
    - name: Install lftp
      run: sudo apt-get install -y lftp && sudo apt install -y rsync

    - name: connect and pull
      run: sshpass -p "${{ secrets.SSH_PRIVATE_KEY }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && (docker pull ghcr.io/sharky0420/dhbw_web:latest) && (docker stop dhbw_web || true) && (docker rm dhbw_web) || true && docker run -d --name dhbw_web --mount=type=bind,src=/var/data,dst=/var/data -p 80:80 ghcr.io/sharky0420/dhbw_web:latest && exit"
    - name: cleanup
      run: rm -rf ~/.ssh